services:
  app:
    image: lcebreiros/cuantosabe:latest
    container_name: laravel-app
    restart: unless-stopped
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.prod
    volumes:
      - storage_data:/var/www/html/storage/app
      - storage_logs:/var/www/html/storage/logs
      - storage_framework:/var/www/html/storage/framework
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true

  db:
    image: mariadb:11.4
    container_name: laravel-db
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: root_password_2025
      MARIADB_DATABASE: cuanto_sabe_db
      MARIADB_USER: CuantoSabe
      MARIADB_PASSWORD: CuantoSabe2025!
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max-connections=100
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true

  queue-worker:
    image: lcebreiros/cuantosabe:latest
    container_name: laravel-queue
    restart: unless-stopped
    command: php artisan queue:work --tries=3 --timeout=90 --sleep=3
    depends_on:
      - app
      - db
    env_file:
      - .env.prod
    volumes:
      - storage_data:/var/www/html/storage/app
      - storage_logs:/var/www/html/storage/logs
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  dbdata:
    driver: local
  storage_data:
    driver: local
  storage_logs:
    driver: local
  storage_framework:
    driver: local

networks:
  app-network:
    driver: bridge